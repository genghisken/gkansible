---
# MAIN TASKS TO BE EXECUTED BY install-anaconda ROLE

- name: "Update packages"
  become: true
  apt:
    update_cache: yes # apt-get update

- name: install Open JDK
  apt:
    name: openjdk-8-jdk
    state: present
  become: true

- name: install gcc
  apt:
    name: gcc
    state: present
  become: true

- name: install g++
  apt:
    name: g++
    state: present
  become: true

- name: install default-libmysqlclient-dev
  apt:
    name: default-libmysqlclient-dev
    state: present
  become: true

- name: install HTTPS transport (not sure why yet)
  apt:
    name: apt-transport-https
    state: present
  become: true

- name: get cassandra repo
  shell: 'wget -q -O - {{ cassandra_server }}/KEYS | sudo apt-key add -'
  become: true

- name: add cassandra
  shell: 'echo "deb {{ cassandra_server }}/debian 311x main" > /etc/apt/sources.list.d/cassandra.list'
  become: true

- name: "Update packages"
  become: true
  apt:
    update_cache: yes # apt-get update

- name: install Cassandra
  apt:
    name: cassandra
    state: present
  become: true

# The following tasks now need to be done.
# 1. Shut down cassandra
# 2. Remove the cassandra datafiles: sudo rm -rf /var/lib/cassandra/*
# 3. Get list of IP addresses from the hosts.yaml file.
# 4. Get list of Seed servers (usually 2 or 3 out of N, where N >= 5.)
# 5. Copy the template Cassandra file in place (/etc/cassandra/) and EDIT in place:
#    - set broadcast_rpc_address to IP address of the target server (ifconfig | grep "inet " | grep -v 127.0.0.1 | awk '{print $2}')
#    - set the server list to the list of addresses in the hosts.yaml file
#    - set the seed list to 2 or 3 of the list of addresses in the hosts.yaml file.
# 6. Copy the template rackdc properties file (cassandra-rackdc.properties) in place to /etc/cassandra (no changes necessary)
# 7. Remove the topology properties file. sudo rm -f /etc/cassandra/cassandra-topology.properties
# 8. Copy the (modified) cassandra.yaml file in place to /etc/cassandra
# DO NOT START THE SERVICE. This should be done manually (seeds first, then other nodes).

- name: Insert line in .bashrc file
  lineinfile:
    dest: "{{ ansible_env.HOME }}/.bashrc"
    line: alias anaconda-init='. "$HOME/anaconda/etc/profile.d/conda.sh"'
    state: present
    create: yes

- name: download installer
  get_url:
    url: '{{ anaconda_installer_url }}'
    dest: '/tmp/{{ anaconda_installer_sh }}'
    timeout: '{{ anaconda_timeout_seconds }}'
    checksum: '{{ anaconda_checksum }}'
    mode: 0755

- name: install
  command: 'bash /tmp/{{ anaconda_installer_sh }} -b -p {{ anaconda_install_dir }}'
  args:
    creates: '{{ anaconda_install_dir }}'

- name: delete installer
  file:
    path: /tmp/{{ anaconda_installer_sh }}
    state: absent

- name: update conda pkgs
  when: anaconda_pkg_update
  command: '{{anaconda_link_dir}}/bin/conda update -y --all'

- name: Run commands in conda environment
  shell: '. {{ ansible_env.HOME }}/anaconda/etc/profile.d/conda.sh && conda create -y -n lasair-cassandra python=3.7 pip'

- name: Install swig inside conda environment
  shell:  '. {{ ansible_env.HOME }}/anaconda/etc/profile.d/conda.sh && conda activate lasair-cassandra && conda install -y swig'

- name: Install all the relevant python packages
  shell: '. {{ ansible_env.HOME }}/anaconda/etc/profile.d/conda.sh && conda activate lasair-cassandra && pip install {{ item }}'
  with_items:
    - cassandra-driver
    - mysqlclient
    - docopt
    - pyyaml
    - datetime
    - gkhtm
    - gkutils
    - gkdbutils
