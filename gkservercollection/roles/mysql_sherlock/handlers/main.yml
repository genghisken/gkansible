---

- name: Recreate views script
  template:
    src: crossmatch_catalogues_20220425_views.sql.j2
    dest: '/tmp/crossmatch_catalogues_20220425_views.sql'
    mode: 0644

- name: Recreate helper tables script
  template:
    src: sherlock_helper_tables_20220425.sql.j2
    dest: '/tmp/sherlock_helper_tables_20220425.sql'
    mode: 0644

#- name: Copy the sql script for dropping the tablespaces to /tmp
#  copy:
#    src: files/sherlock_innodb_discard_tablespaces.sql
#    dest: /tmp/sherlock_innodb_discard_tablespaces.sql
#    owner: mysql
#    group: mysql
#    mode: 0644 
#  become: true
#
#- name: Copy the sql script for importing the tablespaces to /tmp
#  copy:
#    src: files/sherlock_innodb_import_tablespaces.sql
#    dest: /tmp/sherlock_innodb_import_tablespaces.sql
#    owner: mysql
#    group: mysql
#    mode: 0644 
#  become: true

- name: create databases (in this case, the Sherlock database)
  mysql_db:
    login_user: "root"
    login_password: "{{ mysql_root_password }}"
    name: "{{ item.name }}"
    state: "{{ item.state | default('present') }}"
    target: "{{ item.target | default(omit) }}"
    encoding: "{{ item.encoding | default(omit) }}"
    collation: "{{ item.collation | default(omit) }}"
  loop: "{{ mysql_databases }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - mysql_databases is defined
  #no_log: yes
  become: true

- name: create users
  mysql_user:
    login_user: "root"
    login_password: "{{ mysql_root_password }}"
    name: "{{ item.name }}"
    password: "{{ item.password | default(omit) }}"
    state: present
    priv: "{{ item.priv | default(omit) }}"
    host: "{{ item.host | default(omit) }}"
    update_password: "{{ item.update_password | default('on_create') }}"
  loop: "{{ mysql_users }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - mysql_users is defined
  #no_log: yes
  become: true

- name: Run the schema create script
  mysql_db:
    name: "crossmatch_catalogues"
    state: import
    target: '/tmp/crossmatch_catalogues_20220425_schema.sql'
    login_user: "{{ item.name }}"
    login_password: "{{ item.password | default(omit) }}"
    login_host: "{{ ansible_all_ipv4_addresses[0] }}"
  loop: "{{ mysql_users }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - mysql_users is defined

#- name: Detach the InnoDB tablespaces from the newly created tables
#  mysql_db:
#    name: "crossmatch_catalogues"
#    state: import
#    target: /tmp/sherlock_innodb_discard_tablespaces.sql
#    login_user: "{{ item.name }}"
#    login_password: "{{ item.password | default(omit) }}"
#    login_host: "{{ ansible_all_ipv4_addresses[0] }}"
#  loop: "{{ mysql_users }}"
#  loop_control:
#    label: "{{ item.name }}"
#  when:
#    - mysql_users is defined

- name: Get the Sherlock MyISAM lite datafiles from remote ceph store
  find:
    paths: "{{ sherlock_catalogue_data_dir_lite }}"
    patterns: '.*\.MY[DI]$'
    use_regex: yes
  register: sherlock_lite_db_files
  become: true
  when:
    - sherlock_import_type == 'lite' or sherlock_import_type == 'full' or sherlock_import_type == 'test'

- name: Copy the lite datafiles
  copy:
    src: "{{ item.path }}"
    dest: "{{ datadir }}/crossmatch_catalogues"
    owner: mysql
    group: mysql
    mode: 0660 
    remote_src: yes
  with_items:
    - "{{ sherlock_lite_db_files.files }}"
  become: true
  when:
    - sherlock_import_type == 'lite' or sherlock_import_type == 'full' or sherlock_import_type == 'test'


- name: Get the Sherlock MyISAM large datafiles from remote ceph store
  find:
    paths: "{{ sherlock_catalogue_data_dir }}"
    patterns: '.*\.MY[DI]$'
    use_regex: yes
  register: sherlock_full_db_files
  become: true
  when:
    - sherlock_import_type == 'full'

- name: Copy the large datafiles
  copy:
    src: "{{ item.path }}"
    dest: "{{ datadir }}/crossmatch_catalogues"
    owner: mysql
    group: mysql
    mode: 0660 
    remote_src: yes
  with_items:
    - "{{ sherlock_full_db_files.files }}"
  become: true
  when:
    - sherlock_import_type == 'full'

#- name: Attach the InnoDB tablespaces from the newly created tables
#  mysql_db:
#    name: "crossmatch_catalogues"
#    state: import
#    target: /tmp/sherlock_innodb_import_tablespaces.sql
#    login_user: "{{ item.name }}"
#    login_password: "{{ item.password | default(omit) }}"
#    login_host: "{{ ansible_all_ipv4_addresses[0] }}"
#  loop: "{{ mysql_users }}"
#  loop_control:
#    label: "{{ item.name }}"
#  when:
#    - mysql_users is defined
#

- name: Restart MySQL - so we now recognise the newly copied MyISAM tables.
  service:
    name: '{% if ansible_os_family == "Debian" %}{{ mysql_service_ubuntu }}{% else %}{{ mysql_service_redhat }}{% endif %}'
    state: restarted
    enabled: yes
  become: true


- name: Import the InnoDB data.
  mysql_db:
    name: "crossmatch_catalogues"
    state: import
    target: "{{ sherlock_sql_dir }}/sherlock_schema_innodb_only_no_ppmxl_20220425.sql"
    login_user: "{{ item.name }}"
    login_password: "{{ item.password | default(omit) }}"
    login_host: "{{ ansible_all_ipv4_addresses[0] }}"
  loop: "{{ mysql_users }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - mysql_users is defined and sherlock_import_type != 'empty'

- name: Import sherlock large table test subset.
  mysql_db:
    name: "crossmatch_catalogues"
    state: import
    target: "{{ sherlock_sql_dir }}/sherlock_test_large_table_data_20220509.sql"
    login_user: "{{ item.name }}"
    login_password: "{{ item.password | default(omit) }}"
    login_host: "{{ ansible_all_ipv4_addresses[0] }}"
  loop: "{{ mysql_users }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - mysql_users is defined and sherlock_import_type == 'test'

- name: Run the create helper tables script
  mysql_db:
    name: "crossmatch_catalogues"
    state: import
    target: '/tmp/sherlock_helper_tables_20220425.sql'
    login_user: "{{ item.name }}"
    login_password: "{{ item.password | default(omit) }}"
    login_host: "{{ ansible_all_ipv4_addresses[0] }}"
  loop: "{{ mysql_users }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - mysql_users is defined


- name: Run the recreate views script. 
  mysql_db:
    name: "crossmatch_catalogues"
    state: import
    target: '/tmp/crossmatch_catalogues_20220425_views.sql'
    login_user: "{{ item.name }}"
    login_password: "{{ item.password | default(omit) }}"
    login_host: "{{ ansible_all_ipv4_addresses[0] }}"
  loop: "{{ mysql_users }}"
  loop_control:
    label: "{{ item.name }}"
  when:
    - mysql_users is defined

