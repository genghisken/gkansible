# 2022-02-07 KWS Test the availability of the credentials

- name: Check that all the required variables are defined
  fail: msg="Secrets not defined anywhere"
  when: settings.id_rsa is not defined

- name: Update packages
  become: true
  apt:
    update_cache: yes # apt-get update
  when: ansible_os_family == "Debian"

# Add specified repository into sources list.
#- apt_repository:
#    repo: "{{ item }}"
#    state: present
#  with_items:
#    - deb http://archive.ubuntu.com/ubuntu focal main
#    - deb http://archive.ubuntu.com/ubuntu focal universe
#    - deb http://archive.ubuntu.com/ubuntu focal restricted
#    - deb http://archive.ubuntu.com/ubuntu focal multiverse
#  become: true
#  when: ansible_os_family == "Debian"

# From Dave's stuff.
- name: Basic package installs
  apt:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
      - git
      - gcc
      - python3-pip
      - gcc-multilib
      - g++-multilib
      - twine
      - tmux
      - python-setuptools
      - python3-pymysql
  become: true
  when: ansible_os_family == "Debian"

- name: Add MariaDB Repository Key for MariaDB repo for {{ ansible_distribution }}
  apt_key:
    url: "{{ mariadb_key_url }}"
    state: present
  when: ansible_os_family == "Debian"
  become: true

- name: Add MariaDB Repository for MariaDB for {{ ansible_distribution }} ({{ ansible_distribution_release }})
  apt_repository:
    filename: mariadb
    repo: "{{ mariadb_ubuntu_repo }} {{ ansible_distribution_release }} main"
    state: present
  when: ansible_os_family == "Debian"
  become: true
  ignore_errors: yes

#- name: Add the MariaDB 10.4 repository
#  register: apt_result
#  ansible.builtin.apt_repository:
#    #repo: deb http://mariadb.mirror.iweb.com/repo/10.4/ubuntu focal main
#    repo: deb http://ams2.mirrors.digitalocean.com/repo/10.4/ubuntu focal main
#    state: present
#  when: ansible_os_family == "Debian"
#  become: true
#  ignore_errors: yes

- name: "Update packages"
  become: true
  apt:
    update_cache: yes # apt-get update
  when: ansible_os_family == "Debian"

- name: install python3
  apt:
    name: python3
    state: present
  become: true
  when: ansible_os_family == "Debian"

- name: install python3-dev
  apt:
    name: python3-dev
    state: present
  become: true
  when: ansible_os_family == "Debian"

- name: install pip3
  apt:
    name: python3-pip
    state: present
  become: true
  when: ansible_os_family == "Debian"

- name: Upgrade pip3 Priority
  alternatives:
    name: pip
    link: /usr/bin/pip
    path: /usr/bin/pip3
    priority: 60
  become: true
  when: ansible_os_family == "Debian"

- name: Upgrade Python3 Priority
  alternatives:
    name: python
    link: /usr/bin/python
    path: /usr/bin/python3
    priority: 60
  become: true
  when: ansible_os_family == "Debian"

# Install very latest version of PyMySQL
- name: install the package, force upgrade
  pip: 
    name: pymysql
    state: latest
    executable: pip3
  become: true

- name: Copy the SSH private key to the destination machines.
  copy:
    content: "{{ settings.id_rsa }}"
    dest: "{{ ansible_env.HOME }}/.ssh/id_rsa"
    mode: '0400'
  when: ansible_os_family == "Debian"

- name: Copy the SSH public key to the destination machines.
  copy:
    content: "{{ settings.id_rsa_pub }}"
    dest: "{{ ansible_env.HOME }}/.ssh/id_rsa.pub"
    mode: '0644'
  when: ansible_os_family == "Debian"

- name: Add the authorized_keys file
  lineinfile:
    dest: "{{ ansible_env.HOME }}/.ssh/authorized_keys"
    line: "{{ settings.id_rsa_pub }}"
    state: present
    create: yes

- name: Create /root/.ssh
  become: true
  file:
    path: /root/.ssh
    state: directory
    owner: root
    group: root
    mode: "0700"

- name: Copy the SSH public key to the destination machines root authorized_keys. In here because I can't get cluster control to do it correctly.
  become: true
  copy:
    content: "{{ settings.id_rsa_pub }}"
    dest: "/root/.ssh/authorized_keys"
    mode: '0644'
  when: ansible_os_family == "Debian"

