---
# MAIN TASKS TO BE EXECUTED BY install-anaconda ROLE

- name: Update packages
  become: true
  apt:
    update_cache: yes # apt-get update
  when: ansible_os_family == "Debian"

- name: install Open JDK 11 Debian
  apt:
    name: openjdk-11-jdk
    state: present
  become: true
  when: ansible_os_family == "Debian"

- name: install cURL Debian
  apt:
    name: curl
    state: present
  become: true
  when: ansible_os_family == "Debian"

- name: install cURL RedHat
  yum:
    name: curl
    state: present
  become: true
  when: ansible_os_family == "RedHat"

- name: install Open JDK 11 CentOS
  yum:
    name: java-11-openjdk
    state: present
  become: true
  when: ansible_os_family == "RedHat"

- name: main configuration (cassandra.repo)
  template:
    src: cassandra.yum.repo.j2
    dest: '/etc/yum.repos.d/cassandra.repo'
    mode: 0644
    owner: root
    group: root
  become: true
  when: ansible_os_family == "RedHat"

- name: install HTTPS transport (not sure why yet)
  apt:
    name: apt-transport-https
    state: present
  become: true
  when: ansible_os_family == "Debian"

# 2023-06-20 KWS Minor update to this. Add key via curl not wget.
- name: get cassandra repo
  shell: 'curl {{ cassandra_server_keys }}/cassandra/KEYS | sudo apt-key add -'
  become: true
  when: ansible_os_family == "Debian"

- name: add cassandra
  shell: 'echo "deb {{ cassandra_server }} {{ cassandra_version }} main" > /etc/apt/sources.list.d/cassandra.sources.list'
  become: true
  when: ansible_os_family == "Debian"

- name: Update packages now cassandra repo added
  become: true
  apt:
    update_cache: yes # apt-get update
  when: ansible_os_family == "Debian"

# 2025-07-21 KWS New code to check for cassandra_mapping.txt file. If we can't find it, fail the install.

- name: Check for cassandra_mappings.txt on controller
  stat:
    path: "{{ playbook_dir }}/cassandra_mappings.txt"
  delegate_to: localhost
  run_once: true
  register: cass_map_stat

- name: Fail the entire run if mapping file is missing
  fail:
    msg: "Mapping file {{ playbook_dir }}/cassandra_mappings.txt not found."
  when: not cass_map_stat.stat.exists
  delegate_to: localhost
  run_once: true

- name: Load cassandra_mappings.txt into hostvars['localhost'].cassandra_map
  set_fact:
    cassandra_map: >-
      {{ lookup(
           'community.general.read_csv',
           file=playbook_dir ~ '/cassandra_mappings.txt',
           delimiter='\t',
           header=true
         )
      }}
  delegate_to: localhost
  run_once: true

- name: Lookup this host in the mapping
  set_fact:
    matching_entries: >-
      {{ hostvars['localhost']['cassandra_map']
         | selectattr('instance','equalto', inventory_hostname)
         | list
      }}

- name: Fail if this host is not in the mapping file
  fail:
    msg: "No mapping entry for {{ inventory_hostname }} â€” aborting."
  when: matching_entries | length == 0

- name: Set rack from mapping
  set_fact:
    rack: "{{ matching_entries[0].hv }}"

# 2025-07-21 KWS New code ends


- name: install Cassandra on Debian systems
  apt:
    name: cassandra
    state: present
  become: true
  when: ansible_os_family == "Debian"
  notify:
    - Stop service cassandra, if started
    - Remove old Cassandra data
    - Create the new Cassandra data
    - main configuration (cassandra.yaml)
    - main configuration (cassandra-rackdc.properties)
    - Create the prometheus directory
    - Download the prometheus agent
    - Prometheus agent configuration file
    - Add the prometheus agent to the cassandra environment

#    - Start the seed nodes
#    - Pause to allow the cassandra seed nodes cassandra to properly start
#    - Start the other cassandra nodes
#    - Pause to allow the cassandra other nodes cassandra to properly start


- name: install Cassandra on RedHat systems
  yum:
    name: cassandra
    state: present
  become: true
  when: ansible_os_family == "RedHat"
  notify:
    - Stop service cassandra, if started
    - Remove old Cassandra data
    - Create the new Cassandra data
    - main configuration (cassandra.yaml)
    - main configuration (cassandra-rackdc.properties)
    - Create the prometheus directory
    - Download the prometheus agent
    - Prometheus agent configuration file
    - Add the prometheus agent to the cassandra environment
#    - Start the seed nodes
#    - Pause to allow the cassandra seed nodes cassandra to properly start
#    - Start the other cassandra nodes
#    - Pause to allow the cassandra other nodes cassandra to properly start


- name: flush handlers
  meta: flush_handlers
