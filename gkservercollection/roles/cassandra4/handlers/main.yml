---

# The apt-get service in Ubuntu automatically starts an installed service.
# Shut it down!
- name: Stop service cassandra, if started
  service:
    name: cassandra
    state: stopped
  become: true

- name: Remove old Cassandra data
  file:
    state: absent
    path: '{{ item }}'
  with_items:
    - "{% if ansible_hostname == 'db0' or ansible_hostname == 'db1' %}{{ cassandra_data_dir_nvmessd }}{% elif ansible_hostname == 'db3' or ansible_hostname == 'db4' %}{{ cassandra_data_dir_satassd }}{% elif ansible_hostname == 'db2' %}{{ cassandra_data_dir_pcissd }}{% else %}{{ cassandra_data_dir }}{% endif %}/data"
    - "{% if ansible_hostname == 'db0' or ansible_hostname == 'db1' %}{{ cassandra_data_dir_nvmessd }}{% elif ansible_hostname == 'db3' or ansible_hostname == 'db4' %}{{ cassandra_data_dir_satassd }}{% elif ansible_hostname == 'db2' %}{{ cassandra_data_dir_pcissd }}{% else %}{{ cassandra_data_dir }}{% endif %}/commitlog"
    - "{% if ansible_hostname == 'db0' or ansible_hostname == 'db1' %}{{ cassandra_data_dir_nvmessd }}{% elif ansible_hostname == 'db3' or ansible_hostname == 'db4' %}{{ cassandra_data_dir_satassd }}{% elif ansible_hostname == 'db2' %}{{ cassandra_data_dir_pcissd }}{% else %}{{ cassandra_data_dir }}{% endif %}/hints"
    - "{% if ansible_hostname == 'db0' or ansible_hostname == 'db1' %}{{ cassandra_data_dir_nvmessd }}{% elif ansible_hostname == 'db3' or ansible_hostname == 'db4' %}{{ cassandra_data_dir_satassd }}{% elif ansible_hostname == 'db2' %}{{ cassandra_data_dir_pcissd }}{% else %}{{ cassandra_data_dir }}{% endif %}/cdc_raw"
    - "{% if ansible_hostname == 'db0' or ansible_hostname == 'db1' %}{{ cassandra_data_dir_nvmessd }}{% elif ansible_hostname == 'db3' or ansible_hostname == 'db4' %}{{ cassandra_data_dir_satassd }}{% elif ansible_hostname == 'db2' %}{{ cassandra_data_dir_pcissd }}{% else %}{{ cassandra_data_dir }}{% endif %}/saved_caches"
  become: true
  when: ansible_os_family == "Debian"


- name: Create the new Cassandra data
  file:
    path: '{{ item }}'
    state: directory
    owner: cassandra
    group: cassandra
    mode: 0775
    recurse: yes
  with_items:
    - "{% if ansible_hostname == 'db0' or ansible_hostname == 'db1' %}{{ cassandra_data_dir_nvmessd }}{% elif ansible_hostname == 'db3' or ansible_hostname == 'db4' %}{{ cassandra_data_dir_satassd }}{% elif ansible_hostname == 'db2' %}{{ cassandra_data_dir_pcissd }}{% else %}{{ cassandra_data_dir }}{% endif %}/data"
    - "{% if ansible_hostname == 'db0' or ansible_hostname == 'db1' %}{{ cassandra_data_dir_nvmessd }}{% elif ansible_hostname == 'db3' or ansible_hostname == 'db4' %}{{ cassandra_data_dir_satassd }}{% elif ansible_hostname == 'db2' %}{{ cassandra_data_dir_pcissd }}{% else %}{{ cassandra_data_dir }}{% endif %}/commitlog"
    - "{% if ansible_hostname == 'db0' or ansible_hostname == 'db1' %}{{ cassandra_data_dir_nvmessd }}{% elif ansible_hostname == 'db3' or ansible_hostname == 'db4' %}{{ cassandra_data_dir_satassd }}{% elif ansible_hostname == 'db2' %}{{ cassandra_data_dir_pcissd }}{% else %}{{ cassandra_data_dir }}{% endif %}/hints"
    - "{% if ansible_hostname == 'db0' or ansible_hostname == 'db1' %}{{ cassandra_data_dir_nvmessd }}{% elif ansible_hostname == 'db3' or ansible_hostname == 'db4' %}{{ cassandra_data_dir_satassd }}{% elif ansible_hostname == 'db2' %}{{ cassandra_data_dir_pcissd }}{% else %}{{ cassandra_data_dir }}{% endif %}/cdc_raw"
    - "{% if ansible_hostname == 'db0' or ansible_hostname == 'db1' %}{{ cassandra_data_dir_nvmessd }}{% elif ansible_hostname == 'db3' or ansible_hostname == 'db4' %}{{ cassandra_data_dir_satassd }}{% elif ansible_hostname == 'db2' %}{{ cassandra_data_dir_pcissd }}{% else %}{{ cassandra_data_dir }}{% endif %}/saved_caches"
  become: true

# The following tasks now need to be done.
# 1. Shut down cassandra
# 2. Remove the cassandra datafiles: sudo rm -rf /var/lib/cassandra/*
# 3. Get list of IP addresses from the hosts.yaml file.
# 4. Get list of Seed servers (usually 2 or 3 out of N, where N >= 5.)
# 5. Copy the template Cassandra file in place (/etc/cassandra/) and EDIT in place:
#    - set broadcast_rpc_address to IP address of the target server (ifconfig | grep "inet " | grep -v 127.0.0.1 | awk '{print $2}')
#    - set the server list to the list of addresses in the hosts.yaml file
#    - set the seed list to 2 or 3 of the list of addresses in the hosts.yaml file.
# 6. Copy the template rackdc properties file (cassandra-rackdc.properties) in place to /etc/cassandra (no changes necessary)
# 7. Remove the topology properties file. sudo rm -f /etc/cassandra/cassandra-topology.properties
# 8. Copy the (modified) cassandra.yaml file in place to /etc/cassandra
# DO NOT START THE SERVICE. This should be done manually (seeds first, then other nodes).

- name: main configuration (cassandra.yaml)
  template:
    src: cassandra.yaml.j2
    dest: '{{ cassandra_config_dir }}{% if ansible_os_family == "RedHat" %}/conf{% endif %}/cassandra.yaml'
    mode: 0644
    owner: cassandra
    group: cassandra
  become: true

- name: main configuration (cassandra-rackdc.properties)
  template:
    src: cassandra-rackdc.properties.j2
    dest: '{{ cassandra_config_dir }}{% if ansible_os_family == "RedHat" %}/conf{% endif %}/cassandra-rackdc.properties'
    mode: 0644
    owner: cassandra
    group: cassandra
  become: true

#- name: Start the seed nodes
#  service:
#    name: cassandra
#    state: started
#  throttle: 1
#  become: true
#  when: (groups['cassandranodes']|length < 5 and inventory_hostname == groups['cassandranodes'][0]) or (groups['cassandranodes']|length >= 5 and (inventory_hostname == groups['cassandranodes'][0] or inventory_hostname == groups['cassandranodes'][2]))
#
#
#- name: Pause to allow the cassandra seed nodes cassandra to properly start
#  wait_for:
#    timeout: 60
#  throttle: 1
#  when: (groups['cassandranodes']|length < 5 and inventory_hostname == groups['cassandranodes'][0]) or (groups['cassandranodes']|length >= 5 and (inventory_hostname == groups['cassandranodes'][0] or inventory_hostname == groups['cassandranodes'][2]))
#
#
#- name: Start the other cassandra nodes
#  service:
#    name: cassandra
#    state: started
#  become: true
#  throttle: 1
#  when: not ( (groups['cassandranodes']|length < 5 and inventory_hostname == groups['cassandranodes'][0]) or (groups['cassandranodes']|length >= 5 and (inventory_hostname == groups['cassandranodes'][0] or inventory_hostname == groups['cassandranodes'][2])) )
#
#- name: Pause to allow the cassandra other nodes cassandra to properly start
#  wait_for:
#    timeout: 60
#  throttle: 1
#  when: not ( (groups['cassandranodes']|length < 5 and inventory_hostname == groups['cassandranodes'][0]) or (groups['cassandranodes']|length >= 5 and (inventory_hostname == groups['cassandranodes'][0] or inventory_hostname == groups['cassandranodes'][2])) )
#
